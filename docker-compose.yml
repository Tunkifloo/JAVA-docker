version: '3.8'

services:
  # PostgreSQL Database
  postgres-db:
    image: postgres:16-alpine
    container_name: employees-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: employeesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - employees-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Application
  spring-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: employees-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/employeesdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - employees-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  employees-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local